<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<!-- <context:component-scan base-package="com.smxy.lq.controller" /> -->
	<!-- 1.SpringMvc:配置容器扫描只扫描Controller注解和ControllerAdvice注解 -->
	<context:component-scan base-package="com.smxy.wechat"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan> 
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- 处理在类级别上的@RequestMapping注解 -->

	
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<!-- 处理在方法级别上的@RequestMapping注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<!-- 默认是ISO-88859-1，避免乱码这里设置为UTF-8 -->
							<value>
								text/html;charset=UTF-8
							</value>
						</list>
					</property>
				</bean>
				<!-- 启动JSON格式的配置 -->
				<bean id="jacksonMessageConverter"
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable 
						representation -->
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<!-- 配置文件方式配置spring task -->
<!-- 		<task:scheduled-tasks>
		<task:scheduled ref="taskJob" method="job1" cron="0 * * * * ?" />
		<task:scheduled ref="taskJob" method="job2" cron="0 * * * * ?" />
	</task:scheduled-tasks>
<bean id="cronTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="taskJob" />
		<property name="targetMethod" value="job1" />
		false表示taskJob不会并发执行，默认为true
		<property name="concurrent" value="false" />
	</bean>
	接下来配置触发器
	<bean id="doWork" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="cronTask" />
		每10秒触发
		<property name="cronExpression" value="0/10 * * * * ?" />
	</bean>
	最后配置调度工厂
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="doWork" />
			</list>
		</property>
	</bean> -->
</beans>